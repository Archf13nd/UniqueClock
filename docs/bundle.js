!function(n,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.clockworkTowers=e():n.clockworkTowers=e()}(self,(()=>(()=>{"use strict";var n={668:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),a=t(645),s=t.n(a)()(r());s.push([n.id,"#clock {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  /* overflow: hidden; */\n}\n\n.clock-body {\n  position: relative;\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: flex-end;\n  overflow: hidden;\n}\n\n.hand {\n  background: rgba(0, 0, 0, 0.116);\n  /* min-height: 50%; */\n  position: relative;\n  transition: all 0.3s ease-in;\n}\n\n.number {\n  display: grid;\n  place-content: center;\n  /* background: #000; */\n}\n\n.highlight {\n  /* WARNING Height prone to breaking if any space is added between the numbers on the hands and you will need to add script to calculate correct height */\n  /* Height works at 10% because the tallest hand contains 10 numbers making 10% the height of 1 number */\n  height: 10%;\n  width: 100%;\n  background: rgba(45, 255, 3, 0.479);\n  position: absolute;\n  bottom: 0;\n}\n","",{version:3,sources:["webpack://./themes/default/clock-styles.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,uBAAuB;EACvB,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,aAAa;EACb,6BAA6B;EAC7B,qBAAqB;EACrB,gBAAgB;AAClB;;AAEA;EACE,gCAAgC;EAChC,qBAAqB;EACrB,kBAAkB;EAClB,4BAA4B;AAC9B;;AAEA;EACE,aAAa;EACb,qBAAqB;EACrB,sBAAsB;AACxB;;AAEA;EACE,wJAAwJ;EACxJ,uGAAuG;EACvG,WAAW;EACX,WAAW;EACX,mCAAmC;EACnC,kBAAkB;EAClB,SAAS;AACX",sourcesContent:["#clock {\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  /* overflow: hidden; */\r\n}\r\n\r\n.clock-body {\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: flex-end;\r\n  overflow: hidden;\r\n}\r\n\r\n.hand {\r\n  background: rgba(0, 0, 0, 0.116);\r\n  /* min-height: 50%; */\r\n  position: relative;\r\n  transition: all 0.3s ease-in;\r\n}\r\n\r\n.number {\r\n  display: grid;\r\n  place-content: center;\r\n  /* background: #000; */\r\n}\r\n\r\n.highlight {\r\n  /* WARNING Height prone to breaking if any space is added between the numbers on the hands and you will need to add script to calculate correct height */\r\n  /* Height works at 10% because the tallest hand contains 10 numbers making 10% the height of 1 number */\r\n  height: 10%;\r\n  width: 100%;\r\n  background: rgba(45, 255, 3, 0.479);\r\n  position: absolute;\r\n  bottom: 0;\r\n}\r\n"],sourceRoot:""}]);const i=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(o)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(s[d]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&s[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var o={};return(()=>{t.r(o),t.d(o,{default:()=>p});var n=t(668);let e;const r=n=>{const e=document.createElement("div");return e.classList.add("number"),e.textContent=`${n}`,e},a=()=>{const n=document.createElement("div");return n.id="unitsSecondHand",n.classList.add("units-second-hand","hand"),n},s=()=>{const n=document.createElement("div");return n.id="tensSecondHand",n.classList.add("tens-second-hand","hand"),n},i=()=>{const n=document.createElement("div");return n.id="unitsMinuteHand",n.classList.add("units-minute-hand","hand"),n},d=()=>{const n=document.createElement("div");return n.id="tensMinuteHand",n.classList.add("tens-minute-hand","hand"),n},c=()=>{const n=document.createElement("div");return n.id="unitsHourHand",n.classList.add("units-hour-hand","hand"),n},l=()=>{const n=document.createElement("div");return n.id="tensHourHand",n.classList.add("tens-hour-hand","hand"),n},u=n=>n.getBoundingClientRect().width;let h;function A(n){let t=document;n&&(t=n),function(n){e=n.getElementById("clock");const t=document.createElement("div"),o=document.createElement("div");o.classList.add("highlight"),t.classList.add("clock-body");const h=e.appendChild(t);h.appendChild(o),u(h);const A=[{hand:c(),numbers:2},{hand:l(),numbers:9},{hand:i(),numbers:5},{hand:d(),numbers:9},{hand:a(),numbers:5},{hand:s(),numbers:9}],p=u(h);A.forEach((n=>{(n=>{const e=[];for(let t=n;t>=0;t--)e.push(r(t));return e})(n.numbers).forEach((e=>{e.style.width=p/6-2+"px",e.style.height=p/6+"px",n.hand.appendChild(e)}))})),A.forEach((n=>{h.appendChild(n.hand)}))}(t),(n=>{h=n.getElementById("clock"),h.style.display="block";const e=n.getElementById("tensSecondHand"),t=n.getElementById("unitsSecondHand"),o=n.getElementById("unitsHourHand"),r=n.getElementById("tensHourHand"),a=n.getElementById("unitsMinuteHand"),s=n.getElementById("tensMinuteHand"),i=n.querySelector("div.number").style.height,d=+i.slice(0,i.length-2),c=()=>{e.style.top=d*(()=>{const n=(new Date).getSeconds();return n<10?n:+n.toString()[1]})()+"px",t.style.top=d*(()=>{const n=(new Date).getSeconds();return n<10?0:+n.toString()[0]})()+"px",a.style.top=d*(()=>{const n=(new Date).getMinutes();return n<10?0:+n.toString()[0]})()+"px",s.style.top=d*(()=>{const n=(new Date).getMinutes();return n<10?n:+n.toString()[1]})()+"px",o.style.top=d*(()=>{const n=(new Date).getHours();return n<10?0:+n.toString()[0]})()+"px",r.style.top=d*(()=>{const n=(new Date).getHours();return n<10?n:+n.toString()[1]})()+"px"};c(),setInterval((()=>{c()}),1e3)})(t)}const p=()=>{class e extends HTMLElement{constructor(){super();const e=document.createElement("template");e.innerHTML='<div id="clock"></div> ';let t=e.content;this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(t);const o=document.createElement("style");o.textContent=n.Z,this.shadowRoot.appendChild(o)}connectedCallback(){this.core(this.shadowRoot)}}e.prototype.core=A,customElements.define("clockwork-tower",e)}})(),o})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,